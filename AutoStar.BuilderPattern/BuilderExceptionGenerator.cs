using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using Microsoft.CodeAnalysis.CSharp.Syntax;

namespace AutoStar.BuilderPattern
{
    static internal class BuilderExceptionGenerator
    {
        public static ClassDeclarationSyntax GenerateExceptionClass()
        {
            return SyntaxFactory.ClassDeclaration("BuilderException")
                .WithModifiers(SyntaxFactory.TokenList(SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                .WithBaseList(
                    SyntaxFactory.BaseList(
                        SyntaxFactory.SingletonSeparatedList<BaseTypeSyntax>(
                            SyntaxFactory.SimpleBaseType(
                                SyntaxFactory.QualifiedName(
                                    SyntaxFactory.IdentifierName("System"),
                                    SyntaxFactory.IdentifierName("Exception"))))))
                .WithMembers(
                    SyntaxFactory.List(
                        new MemberDeclarationSyntax[]
                        {
                            SyntaxFactory.ConstructorDeclaration(SyntaxFactory.Identifier("BuilderException"))
                                .WithModifiers(
                                    SyntaxFactory.TokenList(SyntaxFactory.Token(SyntaxKind.PublicKeyword)))
                                .WithParameterList(
                                    SyntaxFactory.ParameterList(
                                        SyntaxFactory.SingletonSeparatedList(
                                            SyntaxFactory.Parameter(
                                                    SyntaxFactory.Identifier("validationFailures"))
                                                .WithModifiers(
                                                    SyntaxFactory.TokenList(
                                                        SyntaxFactory.Token(SyntaxKind.ParamsKeyword)))
                                                .WithType(
                                                    SyntaxFactory.ArrayType(
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(
                                                                    SyntaxKind
                                                                        .StringKeyword)))
                                                        .WithRankSpecifiers(
                                                            SyntaxFactory.SingletonList(
                                                                SyntaxFactory.ArrayRankSpecifier(
                                                                    SyntaxFactory.SingletonSeparatedList<
                                                                        ExpressionSyntax>(
                                                                        SyntaxFactory.OmittedArraySizeExpression()))))))))
                                .WithInitializer(
                                    SyntaxFactory.ConstructorInitializer(
                                        SyntaxKind.BaseConstructorInitializer,
                                        SyntaxFactory.ArgumentList(
                                            SyntaxFactory.SingletonSeparatedList(
                                                SyntaxFactory.Argument(
                                                    SyntaxFactory.InvocationExpression(
                                                            SyntaxFactory.IdentifierName("GetMessage"))
                                                        .WithArgumentList(
                                                            SyntaxFactory.ArgumentList(
                                                                SyntaxFactory.SingletonSeparatedList(
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.IdentifierName(
                                                                            "validationFailures"))))))))))
                                .WithBody(SyntaxFactory.Block()),
                            SyntaxFactory.MethodDeclaration(
                                    SyntaxFactory.PredefinedType(SyntaxFactory.Token(SyntaxKind.StringKeyword)),
                                    SyntaxFactory.Identifier("GetMessage"))
                                .WithModifiers(
                                    SyntaxFactory.TokenList(
                                        new[]
                                        {
                                            SyntaxFactory.Token(SyntaxKind.PrivateKeyword),
                                            SyntaxFactory.Token(SyntaxKind.StaticKeyword)
                                        }))
                                .WithParameterList(
                                    SyntaxFactory.ParameterList(
                                        SyntaxFactory.SingletonSeparatedList(
                                            SyntaxFactory.Parameter(SyntaxFactory.Identifier("validationFailures"))
                                                .WithType(
                                                    SyntaxFactory.QualifiedName(
                                                        SyntaxFactory.QualifiedName(
                                                            SyntaxFactory.QualifiedName(
                                                                SyntaxFactory.IdentifierName("System"),
                                                                SyntaxFactory.IdentifierName(
                                                                    "Collections")),
                                                            SyntaxFactory.IdentifierName("Generic")),
                                                        SyntaxFactory.GenericName(
                                                                SyntaxFactory.Identifier("IEnumerable"))
                                                            .WithTypeArgumentList(
                                                                SyntaxFactory.TypeArgumentList(
                                                                    SyntaxFactory.SingletonSeparatedList<
                                                                        TypeSyntax>(
                                                                        SyntaxFactory.PredefinedType(
                                                                            SyntaxFactory.Token(
                                                                                SyntaxKind
                                                                                    .StringKeyword))))))))))
                                .WithBody(
                                    SyntaxFactory.Block(
                                        SyntaxFactory.SingletonList<StatementSyntax>(
                                            SyntaxFactory.ReturnStatement(
                                                SyntaxFactory.InvocationExpression(
                                                        SyntaxFactory.MemberAccessExpression(
                                                            SyntaxKind
                                                                .SimpleMemberAccessExpression,
                                                            SyntaxFactory.PredefinedType(
                                                                SyntaxFactory.Token(
                                                                    SyntaxKind
                                                                        .StringKeyword)),
                                                            SyntaxFactory.IdentifierName("Join")))
                                                    .WithArgumentList(
                                                        SyntaxFactory.ArgumentList(
                                                            SyntaxFactory.SeparatedList<ArgumentSyntax>(
                                                                new SyntaxNodeOrToken[]
                                                                {
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.LiteralExpression(
                                                                            SyntaxKind
                                                                                .StringLiteralExpression,
                                                                            SyntaxFactory.Literal(
                                                                                "; "))),
                                                                    SyntaxFactory.Token(
                                                                        SyntaxKind
                                                                            .CommaToken),
                                                                    SyntaxFactory.Argument(
                                                                        SyntaxFactory.IdentifierName(
                                                                            "validationFailures"))
                                                                })))))))
                        }));
        }
    }
}